@{
    ViewData["Title"] = "Atenciones tecnicas";
    Layout = "~/Views/Shared/ConsumerLayout.cshtml";
}

@section Styles {

    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
}

<div class="container">

    <br />

    <span>Seleccion el estado de atencion:</span>
    <select id="sltAttentionsStates" class="form-control-sm">
        <option value="COMPLETADO">COMPLETADO</option>
        <option value="PENDIENTE">PENDIENTE</option>
        <option value="EN PROCESO">EN PROCESO</option>
        <option value="DENEGADO">DENEGADO</option>
    </select>

    <div class="row header" style="text-align:center;color:green">
        <h3>Atenciones</h3>
    </div>

    <table id="tblAttentions" class="table table-striped table-bordered" style="width:100%"></table>
</div>

<div id="mdlAddReviewToJob" class="modal fade" tabindex="-1" aria-labelledby="mdlAddReviewToJob" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Enviar reseña</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">

                <div>

                    <div class="form-group" style="display:none;">
                        <div class="col-sm-9">
                            <input id="iptTechnicalId" type="hidden" class="form-control">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Puntaje:</label>

                        <div class="col-sm-9">
                            <input id="iptScore" type="number" class="form-control">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Opinion:</label>

                        <div class="col-sm-9">
                            <input id="iptOpinion" type="text" class="form-control">
                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer">
                <button id="btnRegisterReviewToJob" type="button" class="btn btn-primary">Enviar reseña</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<div id="mdlRegisterComplaint" class="modal fade" tabindex="-1" aria-labelledby="mdlRegisterComplaint" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Registrar queja</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">

                <div>

                    <div class="form-group" style="display:none;">
                        <div class="col-sm-9">
                            <input id="iptId" type="hidden" class="form-control">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Tipo de reporte:</label>

                        <div class="col-sm-9">
                            <select id="sltTypesComplaints" class="form-control"></select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Descripcion:</label>

                        <div class="col-sm-9">
                            <input id="iptDescription" type="text" placeholder="Escriba la descripcion" class="form-control" required autocomplete="off">
                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer">
                <button id="btnRegisterComplaint" type="button" class="btn btn-primary">Enviar reporte</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<div id="mdlAttentionDetail" class="modal fade" tabindex="-1" aria-labelledby="mdlAttentionDetail" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Detalles del trabajo</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">

                <div>
                    <div class="box">

                        <p id="pAddress"></p>
                        <br>

                        <p id="pDescription"></p>
                        <br>

                    </div>
                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript" src="https://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            var attentions = [];

            $(window).on('load', async function () {

                try {

                    await loadAttentions();

                } catch (error) {

                    console.error('Error durante la carga de datos: ', error);
                }
            });

            $('#sltAttentionsStates').on('change', function () {

                var filteredAttentions = attentions.filter(a => a.JobState === $(this).val());

                fillTableAttentions(filteredAttentions, $(this).val());
            });

            $('#tblAttentions').on('click', '#btnAddReview', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                $('#iptTechnicalId').val(rowData.TechnicalId);
            });

            $('#tblAttentions').on('click', '#btnAddComplaint', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                $('#iptId').val(rowData.Id);

                loadTypesComplaints();
            });

            $('#tblAttentions').on('click', '#btnAttentionDetail', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                var filteredAttentions = attentions.find(a => a.Id === parseInt(rowData.Id));

                $('#pAddress').text(`Direccion: ${filteredAttentions.Address}`);
                $('#pDescription').text(`Descripcion: ${filteredAttentions.Description}`);
            });

            $('#tblAttentions').on('click', '#btnChat', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                window.open('@Url.Action("Messaging", "Communications")' + `?chatRoomId=${rowData.ChatRoomId}`, '_blank');
            });

            $('#btnRegisterComplaint').on('click', async function () {

                var information = new FormData();

                information.append('TypeComplaintId', $('#sltTypesComplaints').val());
                information.append('JobId', $('#iptId').val());
                information.append('Description', $('#iptDescription').val());

                await registerComplaint(information);

                $('#sltTypesComplaints').val('');
                $('#iptId').val('');
                $('#iptDescription').val('');
            });

            async function loadAttentions() {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("JobsByConsumer", "Attentions")',
                        method: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8'
                    });

                    attentions = data;

                    fillTableAttentions(attentions, 'COMPLETADO');

                } catch (error) {

                    // window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            function loadTypesComplaints() {

                jQuery.ajax({

                    url: '@Url.Action("AllTypesComplaints", "Reports")',
                    method: 'GET',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        var contentHtml = '';

                        for (const item of data) {

                            contentHtml += `<option value="${item.Id}">${item.Name}</option>`;
                        }

                        $('#sltTypesComplaints').html(contentHtml);
                    },
                    error: function () {

                        //window.open('@Url.Action("Error", "Home")', '_self');
                    }
                });
            }

            async function registerComplaint(information) {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("RegisterComplaint", "Reports")',
                        method: 'POST',
                        data: information,
                        cache: false,
                        contentType: false,
                        processData: false,
                    });

                    if (data === true) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Queja enviada!',
                            text: 'El envio de la queja se ha realizado correctamente.'
                        });

                    } else {

                        Swal.fire({
                            icon: 'error',
                            title: 'Error al enviar queja!',
                            text: 'Se produjo un error al intentar enviar la queja.'
                        });
                    }

                } catch (error) {

                    // window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            function fillTableAttentions(listAttentions, attentionsStates) {

                if (listAttentions.length === 0) {

                    Swal.fire({
                        icon: 'info',
                        title: 'No se encontraron resultados!',
                        text: 'No existen datos al intentar buscar por estado de atencion!'
                    });

                    $('#tblAttentions').html('');

                    return;
                }

                var columns = [];

                if (attentionsStates === 'PENDIENTE' || attentionsStates === 'COMPLETADO') {

                    columns = [
                        { data: 'Id', title: 'Id' },
                        { data: 'ChatRoomId', title: 'Chat' },
                        { data: 'TechnicalId', title: 'DNI' },
                        { data: 'Firstname', title: 'Nombre' },
                        { data: 'Lastname', title: 'Apellido' },
                        { data: 'Phone', title: 'Contacto' },
                        { data: 'WorkDate', title: 'Fecha' },
                        { data: 'Time', title: 'Tiempo' },
                        { data: 'LaborBudget', title: 'Mano de obra' },
                        { data: 'MaterialBudget', title: 'Materiales' },
                        { data: 'AmountFinal', title: 'Monto final' },
                        { data: 'JobState', title: 'Estado' }
                    ];

                    columns.push({

                        data: null,
                        title: "Opciones",
                        render: function (data, type, row) {

                            return `
                                <button id="btnAddReviewToJob" class="btn btn-sm btn-neutral" data-toggle="modal" data-target="#mdlAddReviewToJob">Reseña</button>
                                <button id="btnAddComplaint" class="btn btn-sm btn-neutral" data-toggle="modal" data-target="#mdlRegisterComplaint">Denunciar</button>
                                <button id="btnAttentionDetail" class="btn btn-sm btn-neutral" data-toggle="modal" data-target="#mdlAttentionDetail">Detalle</button>
                                <button id="btnChat" class="btn btn-sm btn-neutral">Mensaje</button>`;
                        }
                    });
                }
                else if (attentionsStates === 'EN PROCESO' || attentionsStates === 'DENEGADO') {

                    columns = [
                        { data: 'Id', title: 'Id' },
                        { data: 'ChatRoomId', title: 'Chat' },
                        { data: 'TechnicalId', title: 'DNI' },
                        { data: 'Firstname', title: 'Nombre' },
                        { data: 'Lastname', title: 'Apellido' },
                        { data: 'Phone', title: 'Contacto' },
                        { data: 'JobState', title: 'Estado' }
                    ];

                    columns.push({

                        data: null,
                        title: "Opciones",
                        render: function (data, type, row) {

                            return `
                                <button id="btnAttentionDetail" class="btn btn-sm btn-neutral" data-toggle="modal" data-target="#mdlAttentionDetail">Detalle</button>
                                <button id="btnChat" class="btn btn-sm btn-neutral">Mensaje</button>`;
                        }
                    });
                }

                if ($.fn.DataTable.isDataTable('#tblAttentions')) {

                    var table = $('#tblAttentions').DataTable();

                    table.clear().rows.add(listAttentions).draw();

                } else {

                    $('#tblAttentions').DataTable({
                        "data": listAttentions,
                        "columns": columns,
                        "searching": true,
                        "paging": true,
                        "ordering": true
                    });
                }
            }

            function getFormattedDate(date) {

                let day = String(date.getDate()).padStart(2, '0');
                let mounth = String(date.getMonth() + 1).padStart(2, '0');
                let year = date.getFullYear();
                let hour = String(date.getHours()).padStart(2, '0');
                let minutes = String(date.getMinutes()).padStart(2, '0');
                let seconds = String(date.getSeconds()).padStart(2, '0');

                return `${day}/${mounth}/${year} ${hour}:${minutes}:${seconds}`;
            }
        });

    </script>
}