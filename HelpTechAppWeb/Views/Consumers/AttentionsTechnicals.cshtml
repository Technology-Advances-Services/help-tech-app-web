@{
    ViewData["Title"] = "Atenciones tecnicas";
    Layout = "~/Views/Shared/ConsumerLayout.cshtml";
}

@section Styles {

    <style>

        .btn i {
            font-size: 16px;
        }

        .btn {
            padding: 5px 8px;
        }

        .btn:hover {
            opacity: 0.8;
            transform: scale(1.1);
            transition: all 0.2s ease-in-out;
        }

        .modern-table {
            border-collapse: collapse;
            width: 100%;
            font-family: 'Poppins', sans-serif;
            margin: 20px 0;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        .modern-table thead {
            background: linear-gradient(90deg, #2196F3, #42A5F5);
            color: white;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: bold;
            font-size: 14px;
        }

        .modern-table tbody tr {
            transition: background 0.3s ease, transform 0.2s ease;
        }

        /* primer degradado */
        .modern-table tbody tr:nth-child(odd) {
            background-color: #FFFFFF;
        }

        /* segundo degradado */
        .modern-table tbody tr:nth-child(even) {
            background-color: #FFFFFF;
        }

        .modern-table tbody tr:hover {
            background-color: #90CAF9;
            transform: scale(1.01);
            cursor: pointer;
        }

        .modern-table td, .modern-table th {
            padding: 15px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }
        
        .modern-table .btn {
            border-radius: 4px;
            font-size: 12px;
            padding: 5px 10px;
            transition: all 0.3s ease;
        }
        
        .modern-table .btn-primary {
            background-color: #42A5F5;
            border-color: #42A5F5;
            color: white;
        }
        
        .modern-table .btn-danger {
            background-color: #E57373;
            border-color: #E57373;
            color: white;
        }
        
        .modern-table .btn-primary:hover {
            background-color: #1E88E5;
            border-color: #1E88E5;
        }
        
        .modern-table .btn-danger:hover {
            background-color: #D32F2F;
            border-color: #D32F2F;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            padding: 6px 12px;
            margin: 0 2px;
            border-radius: 4px;
            border: 1px solid transparent;
            background: #42A5F5;
            color: white;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
            background: #1E88E5;
            border-color: #1E88E5;
        }

        .dataTables_wrapper .dataTables_filter input {
            border-radius: 20px;
            border: 1px solid #ccc;
            padding: 5px 10px;
            margin-left: 5px;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .dataTables_wrapper .dataTables_filter input:focus {
            border-color: #42A5F5;
            outline: none;
        }

        .dt-buttons .btn {
            margin-right: 10px;
            font-size: 14px;
            font-weight: bold;
        }

    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
}

<div class="container">

    <br />

    <span>Seleccion el estado de atencion:</span>
    <select id="sltAttentionsStates" class="form-control-sm">
        <option value="COMPLETADO">COMPLETADO</option>
        <option value="PENDIENTE">PENDIENTE</option>
        <option value="EN PROCESO">EN PROCESO</option>
        <option value="DENEGADO">DENEGADO</option>
    </select>

    <div class="row header" style="text-align:center;color:green">
        <h3>Atenciones</h3>
    </div>

    <table id="tblAttentions" class="table table-striped table-hover table-bordered modern-table"></table>
</div>

<div id="mdlAddReviewToJob" class="modal fade" tabindex="-1" aria-labelledby="mdlAddReviewToJob" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Enviar reseña</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">

                <div>

                    <div class="form-group" style="display:none;">
                        <div class="col-sm-9">
                            <input id="iptTechnicalId" type="hidden" class="form-control">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Puntaje:</label>

                        <div class="col-sm-9">
                            <input id="iptScore" placeholder="Del 1 al 5" type="number" min="1" max="5" class="form-control" required autocomplete="off">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Opinion:</label>

                        <div class="col-sm-9">
                            <input id="iptOpinion" type="text" class="form-control" required autocomplete="off">
                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer">
                <button id="btnRegisterReviewToJob" type="button" class="btn btn-primary" data-dismiss="modal">Enviar reseña</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<div id="mdlRegisterComplaint" class="modal fade" tabindex="-1" aria-labelledby="mdlRegisterComplaint" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Registrar queja</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">

                <div>

                    <div class="form-group" style="display:none;">
                        <div class="col-sm-9">
                            <input id="iptId" type="hidden" class="form-control">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Tipo de reporte:</label>

                        <div class="col-sm-9">
                            <select id="sltTypesComplaints" class="form-control"></select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-3 control-label">Descripcion:</label>

                        <div class="col-sm-9">
                            <input id="iptDescription" type="text" placeholder="Escriba la descripcion" class="form-control" required autocomplete="off">
                        </div>
                    </div>

                </div>

            </div>

            <div class="modal-footer">
                <button id="btnRegisterComplaint" type="button" class="btn btn-primary" data-dismiss="modal">Enviar reporte</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<div id="mdlAttentionDetail" class="modal fade" tabindex="-1" aria-labelledby="mdlAttentionDetail" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header float-right">

                <h5>Detalles del trabajo</h5>

                <div class="text-right">
                    <i data-dismiss="modal" aria-label="Close" class="fa fa-close"></i>
                </div>

            </div>

            <div class="modal-body">

                <div>
                    <div class="box">

                        <p id="pAddress"></p>
                        <br>

                        <p id="pDescription"></p>
                        <br>

                    </div>
                </div>

            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript" src="https://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            var attentions = [];

            $(window).on('load', async function () {

                try {

                    await loadAttentions();

                } catch (error) {

                    console.error('Error durante la carga de datos: ', error);
                }
            });

            $('#sltAttentionsStates').on('change', function () {

                var filteredAttentions = attentions.filter(a => a.JobState === $(this).val());

                fillTableAttentions(filteredAttentions, $(this).val());
            });

            $('#tblAttentions').on('click', '#btnAddReviewToJob', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                $('#iptTechnicalId').val(rowData.TechnicalId);
            });

            $('#tblAttentions').on('click', '#btnAddComplaint', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                $('#iptId').val(rowData.Id);

                loadTypesComplaints();
            });

            $('#tblAttentions').on('click', '#btnAttentionDetail', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                var filteredAttentions = attentions.find(a => a.Id === parseInt(rowData.Id));

                $('#pAddress').text(`Direccion: ${filteredAttentions.Address}`);
                $('#pDescription').text(`Descripcion: ${filteredAttentions.Description}`);
            });

            $('#tblAttentions').on('click', '#btnChat', function () {

                var table = $('#tblAttentions').DataTable();

                var rowData = table.row($(this).closest('tr')).data();

                window.open('@Url.Action("Messaging", "Communications")' + `?chatRoomId=${rowData.ChatRoomId}`, '_blank');
            });

            $('#btnRegisterReviewToJob').on('click', async function() {

                var information = new FormData();

                information.append('TechnicalId', $('#iptTechnicalId').val());
                information.append('Score', $('#iptScore').val());
                information.append('Opinion', $('#iptOpinion').val());

                await registerReview(information);

                $('#iptTechnicalId').val('');
                $('#iptScore').val('');
                $('#iptOpinion').val('');
            });

            $('#btnRegisterComplaint').on('click', async function () {

                var information = new FormData();

                information.append('TypeComplaintId', $('#sltTypesComplaints').val());
                information.append('JobId', $('#iptId').val());
                information.append('Description', $('#iptDescription').val());

                await registerComplaint(information);

                $('#sltTypesComplaints').val('');
                $('#iptId').val('');
                $('#iptDescription').val('');
            });

            async function loadAttentions() {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("JobsByConsumer", "Attentions")',
                        method: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8'
                    });

                    attentions = data;

                    fillTableAttentions(attentions, 'COMPLETADO');

                } catch (error) {

                    window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            function loadTypesComplaints() {

                jQuery.ajax({

                    url: '@Url.Action("AllTypesComplaints", "Reports")',
                    method: 'GET',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {

                        var contentHtml = '';

                        for (const item of data) {

                            contentHtml += `<option value="${item.Id}">${item.Name}</option>`;
                        }

                        $('#sltTypesComplaints').html(contentHtml);
                    },
                    error: function () {

                        window.open('@Url.Action("Error", "Home")', '_self');
                    }
                });
            }

            async function registerReview(information) {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("AddReviewToJob", "Attentions")',
                        method: 'POST',
                        data: information,
                        cache: false,
                        contentType: false,
                        processData: false,
                    });

                    if (data === true) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Reseña enviada!',
                            text: 'El envio de la reseña se ha realizado correctamente.'
                        });

                    } else {

                        Swal.fire({
                            icon: 'error',
                            title: 'Error al enviar reseña!',
                            text: 'Se produjo un error al intentar enviar la reseña.'
                        });
                    }

                } catch (error) {

                    window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            async function registerComplaint(information) {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("RegisterComplaint", "Reports")',
                        method: 'POST',
                        data: information,
                        cache: false,
                        contentType: false,
                        processData: false,
                    });

                    if (data === true) {

                        Swal.fire({
                            icon: 'success',
                            title: 'Queja enviada!',
                            text: 'El envio de la queja se ha realizado correctamente.'
                        });

                    } else {

                        Swal.fire({
                            icon: 'error',
                            title: 'Error al enviar queja!',
                            text: 'Se produjo un error al intentar enviar la queja.'
                        });
                    }

                } catch (error) {

                    window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            function fillTableAttentions(listAttentions, attentionsStates) {

                if (listAttentions.length === 0) {

                    Swal.fire({
                        icon: 'info',
                        title: 'No se encontraron resultados!',
                        text: 'No existen datos al intentar buscar por estado de atencion!'
                    });

                    return;
                }

                var columns = [
                    { data: 'Id', title: 'Id', visible: false }, //0
                    { data: 'ChatRoomId', title: 'Chat', visible: false }, //1
                    { data: 'TechnicalId', title: 'DNI', visible: false }, //2
                    { data: 'Firstname', title: 'Nombre' }, //3
                    { data: 'Lastname', title: 'Apellido' }, //4
                    { data: 'Phone', title: 'Contacto' }, //5
                    { data: 'RegistrationDate', title: 'Emision' }, //6
                    { data: 'WorkDate', title: 'Fecha' }, //7
                    { data: 'Time', title: 'Tiempo' }, //8
                    { data: 'LaborBudget', title: 'Mano de obra' }, //9
                    { data: 'MaterialBudget', title: 'Materiales' }, //10
                    { data: 'AmountFinal', title: 'Monto final' }, //11
                    { //11
                        data: null,
                        title: 'Opinar',
                        render: function() {
                            return `
                                <button id="btnAddReviewToJob" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#mdlAddReviewToJob">
                                    <i class="fa fa-star"></i>
                                </button>`;
                        }
                    },
                    { //12
                        data: null,
                        title: 'Queja',
                        render: function() {
                            return `
                                <button id="btnAddComplaint" class="btn btn-sm btn-danger" data-toggle="modal" data-target="#mdlRegisterComplaint">
                                    <i class="fa fa-exclamation-triangle"></i>
                                </button>`;
                        }
                    },
                    { //13
                        data: null,
                        title: 'Ver',
                        render: function() {
                            return `
                                <button id="btnAttentionDetail" class="btn btn-sm btn-success" data-toggle="modal" data-target="#mdlAttentionDetail">
                                    <i class="fa fa-info-circle"></i>
                                </button>`;
                        }
                    },
                    { //14
                        data: null,
                        title: 'Chat',
                        render: function() {
                            return `
                                <button id="btnChat" class="btn btn-sm btn-primary">
                                    <i class="fa fa-comment"></i>
                                </button>`;
                        }
                    }
                ];

                switch(attentionsStates) {
                    case 'PENDIENTE':
                    case 'COMPLETADO':
                        columns[11].visible = true;
                        columns[12].visible = true;
                        columns[13].visible = true;
                        columns[14].visible = true;
                        break;
                    case 'EN PROCESO':
                    case 'DENEGADO':
                        columns[7].visible = false;
                        columns[8].visible = false;
                        columns[9].visible = false;
                        columns[10].visible = false;
                        columns[11].visible = false;
                        columns[12].visible = false;
                        columns[13].visible = true;
                        columns[14].visible = true;
                        break;
                    default:
                        columns[11].visible = false;
                        columns[12].visible = false;
                        columns[13].visible = false;
                        columns[14].visible = false;
                        break;
                }

                for (var i = 0; i < listAttentions.length; ++i) {

                    listAttentions[i].RegistrationDate = getFormattedDate(listAttentions[i].RegistrationDate);

                    if (listAttentions[i].WorkDate !== null) {

                        listAttentions[i].WorkDate = getFormattedDate(listAttentions[i].WorkDate);
                    }
                    else {
                        listAttentions[i].WorkDate = null;
                    }
                }

                if ($.fn.DataTable.isDataTable('#tblAttentions')) {

                    $('#tblAttentions').DataTable().clear().destroy();
                }

                $('#tblAttentions').DataTable({
                    data: listAttentions.filter(a => a.JobState === attentionsStates),
                    columns: columns,
                    searching: true,
                    paging: true,
                    responsive: true,
                    order: []
                });
            }

            function getFormattedDate(tempDate) {

                const regex = /^\d{2}\/\d{2}\/\d{4} \d{2}:\d{2}$/;

                if (!regex.test(tempDate)) {

                    var date = new Date(tempDate);

                    let day = String(date.getDate()).padStart(2, '0');
                    let mounth = String(date.getMonth() + 1).padStart(2, '0');
                    let year = date.getFullYear();
                    let hour = String(date.getHours()).padStart(2, '0');
                    let minutes = String(date.getMinutes()).padStart(2, '0');
                    let seconds = String(date.getSeconds()).padStart(2, '0');

                    return `${day}/${mounth}/${year} ${hour}:${minutes}`;
                }

                return tempDate;
            }
        });

    </script>
}